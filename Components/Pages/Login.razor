@page "/login"
@using System.ComponentModel.DataAnnotations

<div id="main-content">
    <div class="page-heading">
        <h3>Welcome to Task Tracker</h3>
    </div>
    <section class="section align-items-center">
        <div class="card col-lg-6">
            <div class="card-body">
                <div id="auth">
                    <div class="row h-100">
                        <!-- Left Section: Login Form -->
                        <div class="col-12 col-md-12">
                            <div id="auth-left">
                                <div id="auth-left">
                                    <h1 class="auth-title">Log in.</h1>
                                    <p class="auth-subtitle mb-5">Log in with your data that you entered during registration.</p>

                                    <form action="index.html">
                                        <div class="form-group position-relative has-icon-left mb-4">
                                            <input type="text" class="form-control form-control-xl" placeholder="Username">
                                            <div class="form-control-icon">
                                                <i class="bi bi-person"></i>
                                            </div>
                                        </div>
                                        <div class="form-group position-relative has-icon-left mb-4">
                                            <input type="password" class="form-control form-control-xl" placeholder="Password">
                                            <div class="form-control-icon">
                                                <i class="bi bi-shield-lock"></i>
                                            </div>
                                        </div>
                                        <div class="form-check form-check-lg d-flex align-items-end">
                                            <input class="form-check-input me-2" type="checkbox" value="" id="flexCheckDefault">
                                            <label class="form-check-label text-gray-600" for="flexCheckDefault">
                                                Keep me logged in
                                            </label>
                                        </div>
                                        <button class="btn btn-primary btn-block btn-lg shadow-lg mt-5">Log in</button>
                                    </form>
                                    <div class="text-center mt-5">
                                        <p class="text-gray-600">Don't have an account? <a href="auth-register.html"
                                                class="font-bold">Sign
                                                up</a>.</p>
                                        <p><a class="font-bold" href="auth-forgot-password.html">Forgot password?</a>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>


@code {
    private LoginModel loginModel = new LoginModel();
    private bool rememberMe = false;
    private string loginErrorMessage = string.Empty;

    private async Task HandleLogin()
    {
        loginErrorMessage = string.Empty;

        // Simulated login validation logic (replace with real backend logic)
        if (loginModel.Email == "admin@example.com" && loginModel.PasswordHash == "password123")
        {
            Console.WriteLine("Login Successful!");
        }
        else
        {
            loginErrorMessage = "Invalid email or password. Please try again.";
        }

        await Task.CompletedTask;
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required.")]
        [DataType(DataType.Password)]
        public string PasswordHash { get; set; } = string.Empty;
    }
}
