@page "/tasks"
@inject TaskService TaskService
@inject NavigationManager Navigation


<div class="page-content px-4 py-4">
    <!-- Page Title -->
    <div class="page-heading">
        <h3>Task List</h3>
    </div>

    <!-- Add New Task Button -->
    <button class="btn btn-primary mb-3">
        <a href="/add-task" class="text-white">
            <i class="bi bi-plus-circle"></i> Add New Task
        </a>
    </button>

    <!-- Tasks Table -->
    @if (tasks == null)
    {
        <p>Loading tasks...</p>
    }
    else if (!tasks.Any())
    {
        <div class="alert alert-info">No tasks found. Add one!</div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4>Tasks</h4>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover table-lg">
                                <thead>
                                    <tr>
                                        <th>Task Name</th>
                                        <th>Category</th>
                                        <th>Priority</th>
                                        <th>Status</th>
                                        <th>Deadline</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in tasks)
                                    {
                                        <tr>
                                            <td>@task.Title</td>
                                            <td>@task.Category</td>
                                            <td>
                                                @if (task.Priority == "High")
                                                {
                                                    <span class="badge bg-danger">High</span>
                                                }
                                                else if (task.Priority == "Medium")
                                                {
                                                    <span class="badge bg-warning">Medium</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">Low</span>
                                                }
                                            </td>
                                            <td>
                                                @if (task.IsComplete)
                                                {
                                                    <span class="badge bg-success">Completed</span>
                                                }
                                                else if (DateTime.UtcNow > task.Deadline)
                                                {
                                                    <span class="badge bg-danger">Overdue</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary">In Progress</span>
                                                }
                                            </td>
                                            <td>@task.Deadline.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <button @onclick="() => EditTask(task)" class="btn btn-sm btn-warning">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </button>
                                                <button @onclick="() => DeleteTask(task.Id)" class="btn btn-sm btn-danger">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<TaskModel> tasks;

    protected override async Task OnInitializedAsync()
    {
        await LoadTasks();
    }

    private async Task LoadTasks()
    {
        tasks = await TaskService.GetTasksAsync("user-id"); // Replace with real user ID
    }

    private void AddTask()
    {
        Navigation.NavigateTo("/add-task");
    }

    private void EditTask(TaskModel task)
    {
        Navigation.NavigateTo($"/edit-task/{task.Id}");
    }

    private async Task DeleteTask(string taskId)
    {
        if (await TaskService.DeleteTaskAsync(taskId))
        {
            await LoadTasks();
        }
    }
}
